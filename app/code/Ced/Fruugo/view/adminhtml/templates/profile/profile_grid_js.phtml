<?php
/**
 * CedCommerce
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the End User License Agreement (EULA)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://cedcommerce.com/license-agreement.txt
 *
 * @category    Ced
 * @package     Ced_CsGroup
 * @author 		CedCommerce Core Team <connect@cedcommerce.com>
 * @copyright   Copyright CedCommerce (http://cedcommerce.com/)
 * @license      http://cedcommerce.com/license-agreement.txt
 */

// @codingStandardsIgnoreFile
?>
<script>
require([
    'jquery',
    'Magento_Ui/js/modal/confirm',
    'underscore',
    'mage/adminhtml/grid',
    'prototype'
], function(jQuery, confirm, _){
<!--
<?php $myBlock = $block->getLayout()->getBlock('profile_products'); ?>
<?php if (is_object($myBlock) && $myBlock->getJsObjectName()): ?>
    var checkBoxes = $H(<?php /* @escapeNotVerified */ echo $myBlock->getUsers(true) ?>);
    var warning = false;
    if (checkBoxes.size() > 0) {
        warning = true;
    }
    jQuery('#in_profile_product').val(checkBoxes.toQueryString());

    function registerUserRole(grid, element, checked)
    {
        if (checked) {
            checkBoxes.set(element.value, 0);
        } else {
            checkBoxes.unset(element.value);
        }

    }

    function roleProductRowClick(grid, event)
    {
        var trElement = Event.findElement(event, 'tr');
        var isInput   = Event.element(event).tagName == 'INPUT';
        if (trElement) {
            var checkbox = Element.getElementsBySelector(trElement, 'input');
            if(checkbox[0]){
                var checked = isInput ? !checkbox[0].checked : checkbox[0].checked;
                var value = checkbox[0].value;
                if (checked) {
                    confirm({
                        content: "<?php /* @escapeNotVerified */ echo __('Warning!\r\nThis action will remove this product from already assigned profile\r\nAre you sure?') ?>",
                        actions: {
                            confirm: function () {
                                checkbox[0].checked = false;
                                checkBoxes.unset(checkbox[0].value);
                                varienElementMethods.setHasChanges(checkbox[0]);
                                if(groupVendorPpcode_massactionJsObject.checkedString.length != 0){
                                    var values = groupVendorPpcode_massactionJsObject.checkedString;
                                    var strArray = values.split(",");
                                    var resultArray = Array();
                                    for(var i = 0; i < strArray.length; i++){
                                        if(strArray[i] != value) {
                                            resultArray.push(strArray[i]);
                                        }
                                    }
                                    groupVendorPpcode_massactionJsObject.checkedString = resultArray.join();
                                    groupVendorPpcode_massactionJsObject.updateCount();
                                }
                            },
                            cancel: function () {
                                checkbox[0].checked = true;
                            },
                            always: function () {
                                console.log('always');
                                $('in_profile_product').value = checkBoxes.toQueryString();
                                grid.reloadParams = {
                                    'in_profile_product[]': checkBoxes.keys()
                                };

                            }
                        }
                    });
                } else {
                    checkbox[0].checked = true;
                    checkBoxes.set(checkbox[0].value, true);
                    $('in_profile_product').value = checkBoxes.toQueryString();
                    grid.reloadParams = {
                        'in_profile_product[]': checkBoxes.keys()
                    };

                    if(groupVendorPpcode_massactionJsObject.checkedString.length == 0){
                        groupVendorPpcode_massactionJsObject.checkedString = value;
                    } else {
                        groupVendorPpcode_massactionJsObject.checkedString = groupVendorPpcode_massactionJsObject.checkedString+','+value;
                    }
                    groupVendorPpcode_massactionJsObject.updateCount();

                    /*if(groupVendorPpcode_massactionJsObject.checkedString.length != 0){
                        var values = groupVendorPpcode_massactionJsObject.checkedString;
                        var strArray = values.split(",");
                        var resultArray = Array();
                        for(var i = 0; i < strArray.length; i++){
                            if(strArray[i] != value) {
                                resultArray.push(strArray[i]);
                            }
                        }
                        groupVendorPpcode_massactionJsObject.checkedString = resultArray.join();
                    }*/

                }
            }
        }
    }

    function roleUsersRowInit(grid, row)
    {
        var checkbox = $(row).getElementsByClassName('checkbox')[0];
        if (checkbox) {
            if (checkbox.checked) {
                checkBoxes.set(checkbox.value, checkbox.checked);
            } else {
                checkBoxes.unset(checkbox.value);
            }

            $('in_profile_product').value = checkBoxes.toQueryString();
            grid.reloadParams = {'in_profile_product[]':checkBoxes.keys()};
        }
    }

    function massSelectUsers(allCheckbox) {
        if (!allCheckbox.checked && _.size(checkBoxes._object) > 0) {
            allCheckbox.checked = true;
            confirm({
                content: "<?php /* @escapeNotVerified */ echo __('Warning!\r\nThis action will remove those product from already assigned groups\r\nAre you sure?') ?>",
                actions: {
                    confirm: function () {
                        allCheckbox.checked = false;
                        markCheckboxes(false);
                    }
                }
            });
        } else {
            markCheckboxes(allCheckbox.checked)
        }
    }
    function markCheckboxes(value) {
        <?php /* @escapeNotVerified */ echo $myBlock->getJsObjectName() ?>.rows.each(function(row)
        {
            $(row).getElementsByClassName('checkbox')[0].checked = value;
            roleUsersRowInit(<?php /* @escapeNotVerified */ echo $myBlock->getJsObjectName() ?>, row);
        });
    }
    function onLoad() {
        if (typeof <?php /* @escapeNotVerified */ echo $myBlock->getJsObjectName() ?> !== 'undefined') {
            <?php /* @escapeNotVerified */ echo $myBlock->getJsObjectName() ?>.
            rowClickCallback = roleProductRowClick;
            <?php /* @escapeNotVerified */ echo $myBlock->getJsObjectName() ?>.
            initRowCallback = roleUsersRowInit;
            <?php /* @escapeNotVerified */ echo $myBlock->getJsObjectName() ?>.
            checkboxCheckCallback = registerUserRole;
            <?php /* @escapeNotVerified */ echo $myBlock->getJsObjectName() ?>.
            checkCheckboxes = massSelectUsers;
            <?php /* @escapeNotVerified */ echo $myBlock->getJsObjectName() ?>.
            rows.each(function (row) {
                roleUsersRowInit(<?php /* @escapeNotVerified */ echo $myBlock->getJsObjectName() ?>, row)
            });
            $('in_profile_product').value = $('in_profile_product').value;
        } else {
            setTimeout(onLoad, 300);
        }
    }
    onLoad();
<?php endif; ?>
//-->

});
</script>
